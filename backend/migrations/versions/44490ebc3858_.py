"""empty message

Revision ID: 44490ebc3858
Revises: 
Create Date: 2021-09-01 05:52:46.215038

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '44490ebc3858'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('interview')
    op.drop_table('owner')
    op.drop_table('pet')
    op.drop_table('breed')
    op.drop_table('species')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('species',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('specie_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='species_pkey')
    )
    op.create_table('breed',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('breed_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='breed_pkey')
    )
    op.create_table('pet',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('pet_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('age', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('specie_id', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('gender', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('vaccinated', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('letter_box_trained', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('note', sa.VARCHAR(length=400), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='pet_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('owner',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('owner_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('mobile', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('country', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('age', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='owner_pkey'),
    sa.UniqueConstraint('first_name', name='owner_first_name_key'),
    sa.UniqueConstraint('last_name', name='owner_last_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('interview',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('pet_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['owner.id'], name='interview_owner_id_fkey'),
    sa.ForeignKeyConstraint(['pet_id'], ['pet.id'], name='interview_pet_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='interview_pkey')
    )
    # ### end Alembic commands ###
